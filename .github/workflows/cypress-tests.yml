name: Cypress E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    
    env:
      CI: true

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.LEVANTE_BOT_APP_ID }}
          private_key: ${{ secrets.LEVANTE_BOT_APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout firebase-functions repo
        uses: actions/checkout@v4
        with:
          repository: levante-framework/firebase-functions
          path: firebase-functions
          token: ${{ steps.generate_token.outputs.token }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Cache Firebase Emulators
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('firebase-functions/package-lock.json') }}
          restore-keys: ${{ runner.os }}-firebase-emulators-

      - name: Install dependencies
        run: npm install

      - name: Install firebase-functions dependencies
        run: |
          cd firebase-functions
          npm install

      - name: Build firebase functions
        run: |
          cd firebase-functions
          # Build the levante-admin functions specifically
          if [ -d "functions/levante-admin" ]; then
            echo "Building levante-admin functions"
            cd functions/levante-admin
            npm install
            npm run build
          else
            echo "levante-admin functions directory not found"
            exit 1
          fi

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Start Firebase emulators
        run: |
          cd firebase-functions
          # Use demo project to avoid authentication issues
          export FIREBASE_PROJECT_ID=demo-levante-test
          export GCLOUD_PROJECT=demo-levante-test
          
          # Configure Firebase to use demo project
          npx firebase use demo-levante-test --add || true
          
          npm run dev &
          
          # Wait for emulators to start and be ready
          echo "Waiting for Firebase emulators to start..."
          for i in {1..60}; do
            # Check if essential services are ready
            if curl -s http://localhost:4001 > /dev/null 2>&1 && \
               curl -s http://localhost:9199 > /dev/null 2>&1 && \
               curl -s http://localhost:8180 > /dev/null 2>&1 && \
               curl -s http://localhost:5002 > /dev/null 2>&1 && \
               curl -s http://localhost:9899 > /dev/null 2>&1; then
              echo "Firebase emulators are ready!"
              break
            fi
            if [ $i -eq 60 ]; then
              echo "Firebase emulators failed to start within 60 seconds"
              echo "Checking emulator status:"
              curl -s http://localhost:4001 || echo "UI emulator (4001) not ready"
              curl -s http://localhost:9199 || echo "Auth emulator (9199) not ready"
              curl -s http://localhost:8180 || echo "Firestore emulator (8180) not ready"
              curl -s http://localhost:5002 || echo "Functions emulator (5002) not ready"
              curl -s http://localhost:9899 || echo "Tasks emulator (9899) not ready"
              exit 1
            fi
            echo "Waiting for emulators... ($i/60)"
            sleep 1
          done

      - name: Seed emulator data
        run: |
          cd firebase-functions
          npm run emulator:seed

      - name: Start Vite dev server
        run: npm run dev &

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
            name: cypress-screenshots
            path: cypress/screenshots/
            
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
            name: cypress-videos
            path: cypress/videos/
